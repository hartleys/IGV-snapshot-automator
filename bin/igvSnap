#!/bin/bash

#estat | tail -n+2 | awk '{ if ( $5 == "qw" ) print $1 }' | tr '\n' '|'

#+SHORTDESC="Simple wrapper for IGV-snapshot-automator tool"
#+ HELPTEXT="This tool is a heavily modified version of the IGV-Snapshot-Automator by Stephen Kelly."$'\n'
#++HELPTEXT="It is intended to allow users to create publication-quality IGV screenshots in an automated fashion."$'\n'
#++HELPTEXT="While the general capability to create automated screenshots in IGV is provided by the IGV batch mode, "
#++HELPTEXT="standard IGV cannot increase the size or resolution of the images, and the output is extremely small (640 pixels wide)"$'\n'
#++HELPTEXT="This tool allows users to increase the resolution and/or the dimensions of the output images."$'\n'
#++HELPTEXT="It also provides a simple wrapper that streamlines the automation process."$'\n'
#+ SYNTAXTEXT="igvSnap [options] bamfile.bam"$'\n'
#+ PARAMS="--help: displays syntax and help info."$'\n'
#++PARAMS="--man: synonym for --help."$'\n'
#++PARAMS="--bedFile <filename.bed>: The bedfile to use, listing the desired regions. This can be combined with the --region parameter."$'\n'
#++PARAMS="--region chr1:10000-20000: Explicitly list a region to plot. Note, the region can optionally be preceded with the region ID using the format: regionID:chr1:1000-2000. This parameter can be set more than once, in which case separate snapshots will be generated for each region."$'\n'
#++PARAMS="--roi chr1:10000-20000: One or more regions of interest to mark on the track. If this is set more than once, then one region of interest will be assigned to each region parameter, in one to one order."$'\n'
#++PARAMS="--viewAsPairs: view bam file reads using the viewaspairs mode."$'\n'
#++PARAMS="--outDir <output/dir/>: The directory to put output images. Defaults to the current directory"$'\n'
#++PARAMS="--outPrefix <fileSuffix>: A suffix to append to each output image filename."$'\n'
#++PARAMS="--outSuffix <fileSuffix>: A suffix to append to each output image filename."$'\n'
#++PARAMS="--trackFile <trackFile.bam/bed/vcf/etc>: Additional track files to include."$'\n'
#++PARAMS="--ht <ht>: The maxHeight param for IGV."$'\n'
#++PARAMS="--wd <wd>: The width of the output image(s), in pixels. (default 1920)"$'\n'
#++PARAMS="--resolutionFactor 1.0: The resolution multiplication factor. This can be used to increase the resolution without shrinking the elements. Roughly 4.17 is equivalent to 300dpi."$'\n'
#++PARAMS="--onlySnap <batchfile.bat>: Instead of creating a new batch file and running it, just use the supplied headlessIGV batch file."$'\n'
#++PARAMS="--noSnap: Instead of creating a new batch file and running it, just create the batch file and stop."$'\n'
#++PARAMS="--additionalInitCommand: Add an additional IGV batch file command to the beginning of the batch file. This can be specified more than once."$'\n'
#++PARAMS="--fmt png/svg/jpg: The image file format you want. Can be png, svg, or jpg. Default: png."$'\n'
#++PARAMS="--python path/to/python: The path to the python executable you want to use. Defaults to just 'python'. This is useful if you have both python 2.7 and python 3+ installed."$'\n'
#++PARAMS="--igvJar path/to/jarfile: The headlessIGV jarfile to use. It is strongly recommended to use the version that comes with this version of igvSnap, as different versions of igvSnap and headlessIGV may not be compatible. Also note that you can NOT use a standard IGV jarfile."$'\n'
#+ VERSION=v0.1.52109877

CURRENT_SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [ "$1" == "--help" -o "$1" == "--man" ]; then
  shift;
  ${CURRENT_SCRIPT_DIR}/manForScript ${BASH_SOURCE[0]} "$@"
  exit 1
fi

set -e


for last; do true; done
echo "BAMFILE=$last"

BEDFILE=""
OUTDIR="./";
BAMFILE=${last}
SUFFIX="";
HT=1200;
WD=1920
FMT="png";
REGIONS="";
PYTHON="python";
NOSNAP="0";
ONLYSNAP="0";
OUTPREFIXCMD="";
OUTPREFIX="";
ROI="";
ROICMD="";
VIEWASPAIRS="";
RESFACTOR="1.0";
additionalInitCommand="";
GENOME="hg19"

while [ "$#" -gt 0 ];
do
      echo "reading param: $1"
      if [ "$1" == "--bedFile" ];
      then
        shift;
        BEDFILE=$1;
      fi
      if [ "$1" == "--wd" ];
      then
        shift;
        WD=$1;
      fi
      if [ "$1" == "--igvJar" ];
      then
        shift;
        IGVJAR=$1;
      fi

      if [ "$1" == "--outSuffix" ]; then
        shift;
        SUFFIX=$1
      fi
      if [ "$1" == "--ht" ]; then
        shift;
        HT=$1
      fi
      if [ "$1" == "--outDir" ]; then
        shift;
        OUTDIR=$1
      fi
      if [ "$1" == "--fmt" ]; then
        shift;
        FMT=$1;
      fi
      if [ "$1" == "--region" ]; then
        shift;
        REGIONS="$REGIONS --region $1";
      fi
      if [ "$1" == "--python" ]; then
        shift;
        PYTHON="$1";
      fi
      if [ "$1" == "--noSnap" ]; then
        NOSNAP="1"
      fi
      if [ "$1" == "--onlySnap" ]; then
        ONLYSNAP="1"
      fi
      if [ "$1" == "--outPrefix" ]; then
        shift;
        OUTPREFIX="$1"
        OUTPREFIXCMD="--outPrefix $1"
      fi

      if [ "$1" == "--trackFile" ];
      then
        shift;
        BAMFILE="$BAMFILE $1";
      fi
      if [ "$1" == "--roi" ]; then
        shift;
        ROI="$ROI $1"
        ROICMD="$ROICMD --roi $1"
      fi
      if [ "$1" == "--viewAsPairs" ]; then
        VIEWASPAIRS="--viewAsPairs";
      fi
      if [ "$1" == "--resolutionFactor" ]; then
        shift;
        RESFACTOR=$1
      fi
      if [ "$1" == "--genome" ]; then
        shift;
        GENOME="$1"
      fi
      
      if [ "$1" == "--additionalInitCommand" ]; then
        shift;
        additionalInitCommand="$additionalInitCommand --additionalInitCommand \"$1\""
      fi

      
      
      shift;
      
done

if [ "${IGVJAR}" == "" ]; then
  IGVJAR="${CURRENT_SCRIPT_DIR}/igv.jar"
  if [ ! -f "$IGVJAR" ]; then
    echo "WARNING: IGVJAR not found in bin directory! Attempting findHeadlessIgv...";
    IGVJAR=$( findHeadlessIgv );
    if [ ! -f "$IGVJAR" ]; then
      echo "ERROR: IGVJAR not found! Autodetect FAILED!";
      exit 10
    fi
  else
    echo "Found igv jarfile: \"${IGVJAR}\"";
  fi
else
  echo "using user-specified IGV: \"${IGVJAR}\""
  echo "warning: if you use a standard version of IGV (and not the special headless version), then many features will not work!";
  if [ ! -f "$IGVJAR" ]; then
     echo "ERROR: IGV JARFILE NOT FOUND: \"${IGVJAR}\""
     exit 10;
  fi
fi


echo "    REGIONS=\"$REGIONS\""

ROI=$( echo $ROI | sed 's/^ //g' )
REGIONS=$( echo $REGIONS | sed 's/^ //g' )
EXTRAOPTS=$( echo $EXTRAOPTS | sed 's/^ //g' )
BAMFILE=$( echo $BAMFILE | sed 's/^ //g' )

echo "Params set:"
echo "    BEDFILE=$BEDFILE"
echo "    OUTDIR=$OUTDIR"
echo "    BAMFILES=\"$BAMFILE\""
echo "    SUFFIX=$SUFFIX"
echo "    HT=$HT"
echo "    FMT=$FMT"
echo "    PYTHON=$PYTHON"
echo "    REGIONS=\"$REGIONS\""
echo "    IGVSnapInstallDir=${CURRENT_SCRIPT_DIR}";
echo "    OUTPREFIX=\"$OUTPREFIX\""
echo "    OUTPREFIXCMD=\"$OUTPREFIXCMD\""
echo "    ROI=\"$ROI\""
echo "    VIEWASPAIRS=\"$VIEWASPAIRS\""
echo "    EXTRAOPTS=$EXTRAOPTS";
echo "    additionalInitCommand=$additionalInitCommand";
echo "    resolutionFactor=$resolutionFactor";


if [ "$BAMFILE" == "youMustSetaBamfileWithTheBamParameter.bam" ]; then
  echo "Error: parameter --bamfile MUST be set!";
  exit 1 
fi

mkdir -p $OUTDIR

if [ "$ONLYSNAP" == "0" ]; then
	if [ -f "$OUTDIR/IGV_snapshots.bat" ]; then
	   IX=1
	   FN="$OUTDIR/IGV_snapshots.$IX.bat"
	   while [ -f "$FN" ]; do
	     IX=$(( $IX + 1 ));
	     FN="$OUTDIR/IGV_snapshots.$IX.bat"
	   done
	   mv "$OUTDIR/IGV_snapshots.bat" "$OUTDIR/IGV_snapshots.$IX.bat"
	fi
fi

echo "Starting BATCHFILE generation! [$(date)]"

BEDFILECMD=""
if [ "$BEDFILE" != "" ]
then
  BEDFILECMD="--bedFile \"$BEDFILE\""
fi


CMD="${PYTHON} ${CURRENT_SCRIPT_DIR}/make_IGV_snapshots.py \
   --genome \"${GENOME}\" \
   --outDir \"$OUTDIR\" \
   --suffix \"$SUFFIX\" \
   ${BEDFILECMD} \
   $REGIONS \
   $ROICMD \
   ${resolutionFactor} \
   --ht \"$HT\" \
   --wd \"$WD\" \
   --igvJar \"$IGVJAR\" \
   --imgFmt \"$FMT\" \
   --noSnap \
   --resolutionFactor "$RESFACTOR" \
   $OUTPREFIXCMD \
   $VIEWASPAIRS \
   $additionalInitCommand \
   $BAMFILE"

if [ "$ONLYSNAP" == "0" ]; then

  echo "evaluating: \"${CMD}\""
  eval $CMD
  
fi

CMD="${PYTHON} ${CURRENT_SCRIPT_DIR}/make_IGV_snapshots.py \
   --onlySnap "$OUTDIR/${OUTPREFIX}IGV_snapshots.bat" \
   --igvJar \"$IGVJAR\" \
   $OUTPREFIX \
   $BAMFILE"

if [ "$NOSNAP" == "0" ]; then

  echo "evaluating: \"${CMD}\""
  eval $CMD

fi

echo "IGV run complete [$(date)]"


